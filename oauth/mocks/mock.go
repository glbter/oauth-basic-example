// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/glbter/oauth-basic-lab2/oauth (interfaces: Auth)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	dto "github.com/glbter/oauth-basic-lab2/dto"
	gomock "github.com/golang/mock/gomock"
)

// MockAuth is a mock of Auth interface.
type MockAuth struct {
	ctrl     *gomock.Controller
	recorder *MockAuthMockRecorder
}

// MockAuthMockRecorder is the mock recorder for MockAuth.
type MockAuthMockRecorder struct {
	mock *MockAuth
}

// NewMockAuth creates a new mock instance.
func NewMockAuth(ctrl *gomock.Controller) *MockAuth {
	mock := &MockAuth{ctrl: ctrl}
	mock.recorder = &MockAuthMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAuth) EXPECT() *MockAuthMockRecorder {
	return m.recorder
}

// GetTokenWithRefresh mocks base method.
func (m *MockAuth) GetTokenWithRefresh(arg0, arg1 string) (dto.UserTokenResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTokenWithRefresh", arg0, arg1)
	ret0, _ := ret[0].(dto.UserTokenResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTokenWithRefresh indicates an expected call of GetTokenWithRefresh.
func (mr *MockAuthMockRecorder) GetTokenWithRefresh(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTokenWithRefresh", reflect.TypeOf((*MockAuth)(nil).GetTokenWithRefresh), arg0, arg1)
}

// Logout mocks base method.
func (m *MockAuth) Logout(arg0 string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Logout", arg0)
	ret0, _ := ret[0].(string)
	return ret0
}

// Logout indicates an expected call of Logout.
func (mr *MockAuthMockRecorder) Logout(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Logout", reflect.TypeOf((*MockAuth)(nil).Logout), arg0)
}

// ValidateUserToken mocks base method.
func (m *MockAuth) ValidateUserToken(arg0 string) (dto.CreateUserResp, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateUserToken", arg0)
	ret0, _ := ret[0].(dto.CreateUserResp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateUserToken indicates an expected call of ValidateUserToken.
func (mr *MockAuthMockRecorder) ValidateUserToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateUserToken", reflect.TypeOf((*MockAuth)(nil).ValidateUserToken), arg0)
}
